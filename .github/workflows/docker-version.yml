name: Docker Version Build

on:
  create:
    tags:
      - v*

jobs:

  docker-build-version:
    if: ${{ startsWith(github.ref, 'refs/tags/v0') || startsWith(github.ref, 'refs/tags/v1') || startsWith(github.ref, 'refs/tags/v2') }}
    runs-on: ubuntu-latest
    outputs:
      version: ${{ steps.get_version.outputs.VERSION }}
    steps:

      - name: Check Out Repo
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}

      - name: Set up QEMU
        uses: docker/setup-qemu-action@master
        with:
          platforms: all

      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v3

      - name: Get the version
        id: get_version
        run: echo "VERSION=${GITHUB_REF/refs\/tags\//}" >> $GITHUB_OUTPUT

      - name: Build and Push
        id: docker_build
        uses: docker/build-push-action@v6
        with:
          context: ./
          file: ./Dockerfile
          platforms: linux/amd64,linux/arm64,linux/arm/v7
          push: true
          tags: ${{ vars.DOCKER_TEAM }}/${{ vars.DOCKER_REPO }}:${{ steps.get_version.outputs.VERSION }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Discord Success Notification
        uses: Kometa-Team/discord-notifications@master
        if: success()
        with:
          webhook_id_token: ${{ secrets.BUILD_WEBHOOK }}
          title: "${{ vars.NAME }} ${{ steps.get_version.outputs.VERSION }}: ${{ vars.TEXT_SUCCESS }}"
          url: https://github.com/Kometa-Team/${{ vars.REPO_NAME }}/actions/runs/${{ github.run_id }}
          color: ${{ vars.COLOR_SUCCESS }}
          username: ${{ vars.BOT_NAME }}
          avatar_url: ${{ vars.BOT_IMAGE }}
          author: ${{ vars.DOCKER_NAME }}
          author_icon_url: ${{ vars.DOCKER_IMAGE }}

      - name: Discord Failure Notification
        uses: Kometa-Team/discord-notifications@master
        if: failure()
        with:
          webhook_id_token: ${{ secrets.BUILD_WEBHOOK }}
          message: ${{ vars.BUILD_FAILURE_ROLE }}
          title: "${{ vars.NAME }} ${{ steps.get_version.outputs.VERSION }}: ${{ vars.TEXT_FAILURE }}"
          url: https://github.com/Kometa-Team/${{ vars.REPO_NAME }}/actions/runs/${{ github.run_id }}
          color: ${{ vars.COLOR_FAILURE }}
          username: ${{ vars.BOT_NAME }}
          avatar_url: ${{ vars.BOT_IMAGE }}
          author: ${{ vars.DOCKER_NAME }}
          author_icon_url: ${{ vars.DOCKER_IMAGE }}

  make-releases:
    runs-on: ubuntu-latest
    needs: [ docker-build-version ]
    steps:

      - name: Check Out Repo
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          ref: develop

      - name: Build Changelog
        id: build-changelog
        run: |
          EOF=$(dd if=/dev/urandom bs=15 count=1 status=none | base64)
          echo "changelog<<$EOF" >> $GITHUB_OUTPUT
          echo "## Commits" >> $GITHUB_OUTPUT
          echo "" >> $GITHUB_OUTPUT
          echo "$(git log $(git describe --tags --abbrev=0 latest^)..${{ needs.docker-build-version.outputs.version }} --pretty='* [`%h`](https://github.com/Kometa-Team/Quickstart/commit/%H): %s (@%an)' --reverse)" >> $GITHUB_OUTPUT
          echo "" >> $GITHUB_OUTPUT
          echo "[**Full Code Changelog**](https://github.com/Kometa-Team/Quickstart/compare/$(git describe --tags --abbrev=0 latest^)...${{ needs.docker-build-version.outputs.version }})" >> $GITHUB_OUTPUT
          echo "$EOF" >> $GITHUB_OUTPUT

      - name: Delete Old Prelease and Tag
        run: gh release delete latest --cleanup-tag
        env:
          GITHUB_TOKEN: ${{ secrets.PAT }}

      - name: Create Prerelease
        uses: ncipollo/release-action@v1
        with:
          name: ${{ vars.NAME }} ${{ github.event.ref }} Build 0
          body: No Current Changes from the Master Branch.
          prerelease: true
          tag: latest
          token: ${{ secrets.PAT }}

      - name: Create Release
        uses: ncipollo/release-action@v1
        with:
          name: ${{ vars.NAME }} ${{ github.event.ref }}
          body: ${{ steps.build-changelog.outputs.changelog }}
          prerelease: false
          tag: ${{ github.event.ref }}
          token: ${{ secrets.PAT }}