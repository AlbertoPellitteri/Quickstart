name: Release Notification

on:
  release:
    types: [ published ]

jobs:

  get-data:
    name: Get Data
    runs-on: ubuntu-latest
    outputs:
      version: ${{ steps.load-data.outputs.version }}
      commit-msg: ${{ steps.load-data.outputs.commit-msg }}
    steps:

      - name: Check Out Repo
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Get Data
        id: load-data
        run: |
            echo "version=$(cat VERSION)" >> $GITHUB_OUTPUT
            echo "commit-msg=$(git log -1 HEAD --pretty=format:%s)" >> $GITHUB_OUTPUT

  build-releases:
    name: Build ${{ matrix.os_upper }} Installer
    runs-on: ${{ matrix.os }}-${{ matrix.os_version }}
    needs: [ get-data ]
    strategy:
      fail-fast: false
      matrix:
        include:
          - os: 'windows'
            os_upper: 'Windows'
            os_version: 'latest'
            ext: '.exe'
          - os: 'ubuntu'
            os_upper: 'Linux'
            os_version: 'latest'
            ext: ''
          - os: 'macos'
            os_upper: 'MacOS'
            os_version: '13'
            ext: ''

    steps:

      - name: Check Out Repo
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.13'

      - name: Install Requirements
        run: pip install -r requirements.txt pyinstaller

      - name: Build Executable
        shell: bash
        run: |
          tag_name=${{github.event.release.tag_name}}
          if [[ "${tag_name}" =~ ^(latest)$ ]]; then
            pyinstaller -y ./quickstart.spec -- --branch develop --build ${{ runner.os }}
            version_value=${{ needs.get-data.outputs.version }}
          else
            pyinstaller -y ./quickstart.spec -- --build ${{ runner.os }}
            version_value=${tag_name}
          fi
          mv dist/Quickstart${{ matrix.ext }} dist/Quickstart-${version_value}-${{ runner.os }}${{ matrix.ext }}
          gh release upload ${tag_name} dist/Quickstart-${version_value}-${{ runner.os }}${{ matrix.ext }}
        env:
          GITHUB_TOKEN: ${{ github.TOKEN }}

  release-notification:

    runs-on: ubuntu-latest
    needs: [ get-data, build-releases ]
    steps:

      - name: Send Discord Commit Notification
        if: github.event.release.prerelease
        uses: Kometa-Team/discord-notifications@master
        with:
          webhook_id_token: ${{ secrets.DEVELOP_WEBHOOK }}
          title: ${{ github.event.release.name }}
          url: https://github.com/Kometa-Team/Quickstart/releases/tag/latest
          description: ${{ needs.get-data.outputs.commit-msg }}
          message: ${{ vars.DEVELOP_ROLE }} - An update to ${{ vars.NAME }} has been published and is available to users of the **develop** branch.
          color: ${{ vars.COLOR_SUCCESS }}
          username: ${{ vars.BOT_NAME }}
          avatar_url: ${{ vars.BOT_IMAGE }}
          author: ${{ vars.NAME }} Develop Release
          author_icon_url: ${{ vars.RELEASE_IMAGE }}

      - name: Send Discord Release Notification
        if: "!github.event.release.prerelease"
        uses: Kometa-Team/discord-notifications@master
        with:
          webhook_id_token: ${{ secrets.RELEASE_WEBHOOK }}
          release: true
          title: Release VERSION
          message: ${{ vars.MASTER_ROLE }} - A new version of ${{ vars.NAME }} has been released and is available to all users
          color: ${{ vars.COLOR_SUCCESS }}
          username: ${{ vars.BOT_NAME }}
          avatar_url: ${{ vars.BOT_IMAGE }}
          author: ${{ vars.NAME }} Release
          author_icon_url: ${{ vars.RELEASE_IMAGE }}
