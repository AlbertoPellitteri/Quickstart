name: Release Notification

on:
  release:
    types: [ published ]

jobs:

  build-releases:
    name: Build ${{ matrix.os_upper }} Installer
    runs-on: ${{ matrix.os }}-${{ matrix.os_version }}
    strategy:
      fail-fast: false
      matrix:
        include:
          - os: 'windows'
            os_upper: 'Windows'
            os_version: 'latest'
            ext: '.exe'
          - os: 'ubuntu'
            os_upper: 'Linux'
            os_version: 'latest'
            ext: ''
          - os: 'macos'
            os_upper: 'MacOS'
            os_version: 'latest'
            ext: ''

    steps:

      - name: Check Out Repo
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.13'

      - name: Install Requirements
        run: pip install -r requirements.txt pyinstaller

      - name: Build Executable
        run: |
          pyinstaller -y ./quickstart-master.spec
          mv dist/Quickstart${{ matrix.ext }} dist/Quickstart-${{github.event.release.tag_name}}-${{ runner.os }}${{ matrix.ext }}
          gh release upload ${{github.event.release.tag_name}} dist/Quickstart-${{github.event.release.tag_name}}-${{ runner.os }}${{ matrix.ext }}
        env:
          GITHUB_TOKEN: ${{ github.TOKEN }}

  release-notification:

    runs-on: ubuntu-latest
    needs: [ build-releases ]
    steps:

      - name: Send Discord Release Notification
        uses: Kometa-Team/discord-notifications@master
        with:
          webhook_id_token: ${{ secrets.RELEASE_WEBHOOK }}
          release: true
          title: Release VERSION
          message: "${{ vars.MASTER_ROLE }} - A new version of ${{ vars.NAME }} has been released and is available to all users"
          color: ${{ vars.COLOR_SUCCESS }}
          username: ${{ vars.BOT_NAME }}
          avatar_url: ${{ vars.BOT_IMAGE }}
          author: ${{ vars.NAME }} Release
          author_icon_url: ${{ vars.RELEASE_IMAGE }}
