name: Docker Latest Build

on:
  push:
    branches: [ master ]

jobs:

  docker-build-latest:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        include:
          - platform: 'linux/amd64'
            dockerfile: 'Dockerfile'
            tag: 'amd64'
          - platform: 'linux/arm64'
            dockerfile: 'Dockerfile'
            tag: 'arm64'
          - platform: 'linux/arm/v7'
            dockerfile: 'Dockerfile.arm7'
            tag: 'armv7'
    steps:

      - name: Create App Token
        uses: actions/create-github-app-token@v2
        id: app-token
        with:
          app-id: ${{ vars.APP_ID }}
          private-key: ${{ secrets.APP_TOKEN }}

      - name: Check Out Repo
        uses: actions/checkout@v4
        with:
          token: ${{ steps.app-token.outputs.token }}

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}

      - name: Set up QEMU
        uses: docker/setup-qemu-action@master
        with:
          platforms: all

      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v3

      - name: Build and Push
        id: docker_build
        uses: docker/build-push-action@v6
        with:
          context: ./
          file: ./${{ matrix.dockerfile }}
          platforms: ${{ matrix.platform }}
          tags: ${{ vars.DOCKER_TEAM }}/${{ vars.DOCKER_REPO }}:-${{ matrix.tag }}

  create-manifest:
    runs-on: ubuntu-latest
    needs: [ build-releases ]

    steps:

      - name: Create App Token
        uses: actions/create-github-app-token@v2
        id: app-token
        with:
          app-id: ${{ vars.APP_ID }}
          private-key: ${{ secrets.APP_TOKEN }}

      - name: Check Out Repo
        uses: actions/checkout@v4
        with:
          token: ${{ steps.app-token.outputs.token }}

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}

      - name: Set up QEMU
        uses: docker/setup-qemu-action@master
        with:
          platforms: all

      - name: Create develop manifest and push
        run: |
          docker manifest create \
            ${{ vars.DOCKER_TEAM }}/${{ vars.DOCKER_REPO }}:latest \
            --amend ${{ vars.DOCKER_TEAM }}/${{ vars.DOCKER_REPO }}:latest-amd64 \
            --amend ${{ vars.DOCKER_TEAM }}/${{ vars.DOCKER_REPO }}:latest-arm64 \
            --amend ${{ vars.DOCKER_TEAM }}/${{ vars.DOCKER_REPO }}:latest-armv7
          docker manifest push ${{ vars.DOCKER_TEAM }}/${{ vars.DOCKER_REPO }}:latest


  build-notification:

    runs-on: ubuntu-latest
    needs: [ create-manifest ]
    steps:

      - name: Discord Success Notification
        uses: Kometa-Team/discord-notifications@master
        if: success()
        with:
          webhook_id_token: ${{ secrets.BUILD_WEBHOOK }}
          title: "${{ vars.NAME }} latest: ${{ vars.TEXT_SUCCESS }}"
          url: https://github.com/Kometa-Team/${{ vars.REPO_NAME }}/actions/runs/${{ github.run_id }}
          color: ${{ vars.COLOR_SUCCESS }}
          username: ${{ vars.BOT_NAME }}
          avatar_url: ${{ vars.BOT_IMAGE }}
          author: ${{ vars.DOCKER_NAME }}
          author_icon_url: ${{ vars.DOCKER_IMAGE }}

      - name: Discord Failure Notification
        uses: Kometa-Team/discord-notifications@master
        if: failure()
        with:
          webhook_id_token: ${{ secrets.BUILD_WEBHOOK }}
          message: ${{ vars.BUILD_FAILURE_ROLE }}
          title: "${{ vars.NAME }} latest: ${{ vars.TEXT_FAILURE }}"
          url: https://github.com/Kometa-Team/${{ vars.REPO_NAME }}/actions/runs/${{ github.run_id }}
          color: ${{ vars.COLOR_FAILURE }}
          username: ${{ vars.BOT_NAME }}
          avatar_url: ${{ vars.BOT_IMAGE }}
          author: ${{ vars.DOCKER_NAME }}
          author_icon_url: ${{ vars.DOCKER_IMAGE }}